<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Php on 雨的味道</title><link>https://reatang.com/tags/php/</link><description>Recent content in Php on 雨的味道</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 20 Nov 2019 19:19:05 +0000</lastBuildDate><atom:link href="https://reatang.com/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>【PHP】Redis 中如何更好的加载Lua脚本</title><link>https://reatang.com/p/old-post-43/</link><pubDate>Wed, 20 Nov 2019 19:19:05 +0000</pubDate><guid>https://reatang.com/p/old-post-43/</guid><description>&lt;p>1、直接使用EVAL执行，不算在“更好”的范围内，不做讨论。&lt;/p>
&lt;p>2、正常判断式：先判断脚本存不存在，再进行操作。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">/**&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span> &lt;span class="err">向&lt;/span>&lt;span class="n">Redis注册Lua脚本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">param&lt;/span> &lt;span class="n">Redis&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">param&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="ne">bool&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">mixed&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">load_lua_script&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Redis&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">is_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="k">return&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="o">$&lt;/span>&lt;span class="n">sha1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sha1_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;EXISTS&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">sha1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">sha1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;LOAD&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file_get_contents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">$&lt;/span>&lt;span class="n">script_sha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_lua_script&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;/path/to/lua_script.lua&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">$&lt;/span>&lt;span class="n">reuslt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">evalSha&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">script_sha&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">key_number&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3、触发式执行：如果执行失败了，才LOAD脚本，并重新运行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * 执行Lua脚本
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @param Redis $redis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @param $file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @param $args
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @param $numKeys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @return bool|mixed|string
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">function run_lua_script(Redis $redis, $file, $args, $numKeys) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    if (!is_file($file)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        return false;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    $sha1 = sha1_file($file);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    for ($run_number = 0; $run_number &amp;lt; 3; $run_number++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        $redis_result = $redis-&amp;gt;evalSha($sha1, $args, $numKeys);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        // 检测脚本是否不存在，如果不存在，则加载，并重新执行
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        if (substr($redis-&amp;gt;getLastError(), 0, 8) === &amp;#39;NOSCRIPT&amp;#39;) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            echo &amp;#39;LOAD&amp;#39; . PHP_EOL;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            $sha1 = $redis-&amp;gt;script(&amp;#39;LOAD&amp;#39;, file_get_contents($file));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            $redis-&amp;gt;clearLastError();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            continue;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        return $redis_result;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    return false;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$reuslt = run_lua_script($redis, &amp;#39;/path/to/lua_script.lua&amp;#39;, $args, $key_number);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>测试：&lt;/p>
&lt;p>Lua脚本：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">-- lua_script.lua
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">local value = redis.call(&amp;#39;INCRBY&amp;#39;, KEYS[1], ARGV[1])
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">return &amp;#39;hello &amp;#39; .. value
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>二号脚本测试运行10000次：8万次单程 IO 运行 0.9738 秒。&lt;/p>
&lt;p>三号脚本测试运行10000次：4万次单程 IO 运行 0.6284 秒。&lt;/p>
&lt;p>显而易见，触发式脚本可以更好的节约IO、以高的性能运行。&lt;/p></description></item><item><title>我是这么理解协程yield异步IO的</title><link>https://reatang.com/p/old-post-23/</link><pubDate>Thu, 30 Mar 2017 11:30:42 +0000</pubDate><guid>https://reatang.com/p/old-post-23/</guid><description>&lt;p>今天又仔仔细细的研究了一下鸟哥写的yield的文章： &lt;a class="link" href="http://www.laruence.com/2015/05/28/3038.html" target="_blank" rel="noopener"
>传送门&lt;/a>&lt;/p>
&lt;p>突然对yield的作用明晰了。&lt;/p>
&lt;p>就像很多人说的 yield 其实就是实现一种以同步方式写异步代码的功能，写了这么多年PHP，完全不清楚这个到底是啥意思。不过看完这篇文章算是懂了。&lt;/p>
&lt;p>一般的PHP代码（类似于同步IO）：&lt;/p>
&lt;p>&lt;img src="https://reatang.com/%7b#ZC_BLOG_HOST#%7dzb_users/upload/2017/03/201703301490844988786421.jpg"
loading="lazy"
alt="1.jpg"
>&lt;/p>
&lt;p>PHP完全以同步的方式在处理 从 【PHP处理】 -&amp;gt; 【处理完成】的这个过程。因为毕竟一次处理一个请求。&lt;/p>
&lt;p>如果使用yield就完全不一样了（首先我们就不能用php-fpm了），php需要自己控制处理所有socket才能达到真异步。&lt;/p>
&lt;p>例，一个业务逻辑(普通的)：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$data = DB::select();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$respA = $httpClient-&amp;gt;post($uri, $data);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if ($respA[&amp;#39;code&amp;#39;] == 0) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    $id = DB::insert($respA[&amp;#39;data&amp;#39;]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    $respB = $httpClient-&amp;gt;post($uri, [&amp;#39;some_id&amp;#39; =&amp;gt; $id]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">return response()-&amp;gt;ok();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果我们用yield：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$data = yield AsyncDB::select();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$respA = yield $AsyncHttpClient-&amp;gt;post($uri, $data);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if ($respA[&amp;#39;code&amp;#39;] == 0) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    $id = yield AsyncDB::insert($respA[&amp;#39;data&amp;#39;]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    $respB = yield $AsyncHttpClient-&amp;gt;post($uri, [&amp;#39;some_id&amp;#39; =&amp;gt; $id]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">return response()-&amp;gt;ok();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之前我一直很困惑，这么写有什么用呢？看了很多文章，甚至写了很多例子，都发现IO依然是同步的。&lt;/p>
&lt;p>这是因为，我们想用到真正的yield的功能就要整个环境（框架）都支持它。&lt;/p>
&lt;p>OK，详细来描述一下这段业务逻辑背后的事情：&lt;/p>
&lt;p>&lt;img src="https://reatang.com/%7b#ZC_BLOG_HOST#%7dzb_users/upload/2017/03/201703301490845963582602.jpg"
loading="lazy"
alt="2.jpg"
>&lt;/p>
&lt;p>上图只是说一次请求。&lt;/p>
&lt;p>IO任务调度器是全局的，我们有成千上万个这种请求在处理：&lt;/p>
&lt;p>&lt;img src="https://reatang.com/%7b#ZC_BLOG_HOST#%7dzb_users/upload/2017/03/201703301490846535355281.jpg"
loading="lazy"
alt="3.jpg"
>&lt;/p>
&lt;p>IO任务调度器的设计就像是epoll 或者 select 一样，非阻塞（同步或者异步）。只要有IO完成了，协程就会返回到这个IO当时yield的地方，继续执行（就像设置断点一样）。&lt;/p>
&lt;p>最后总结：&lt;/p>
&lt;p>在有协程的框架设计中任务调度器的设计就是提高程序性能的关键，假如普通的同步请求一个单位时间处理1一个请求，那么这种yeild协程就是看机器的性能了。&lt;/p></description></item><item><title>php优雅的获取大量的参数——位掩码</title><link>https://reatang.com/p/old-post-22/</link><pubDate>Thu, 23 Mar 2017 10:27:58 +0000</pubDate><guid>https://reatang.com/p/old-post-22/</guid><description>&lt;p>对函数内部进行参数设置是在编码中经常遇见的一个设计问题，一般情况下，我们会有三种方式。&lt;/p>
&lt;h3 id="12b程序员没错这就是我经常用的那种">1、2B程序员（没错这就是我经常用的那种）
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function a_func($option1, $option2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if ($option1) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //some code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> } else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //some code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if ($option2) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //some code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> } else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //some code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2普通程序员">2、普通程序员
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function b_func($options)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if ($options[&amp;#39;a&amp;#39;]) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //some code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> } else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //some code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if ($options[&amp;#39;b&amp;#39;]) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //some code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> } else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //some code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3文艺的程序员">3、文艺的程序员
&lt;/h3>&lt;p>没错，今儿我就是要讲讲怎么个文艺法.&lt;/p>
&lt;h4 id="31对比一下">3.1、对比一下
&lt;/h4>&lt;p>作为php程序员json_encode 这个函数肯定是再了解不过了，可是大家了解这个函数的第二个参数吗？&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//像这样
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$data_str = json_encode($a, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP | JSON_UNESCAPED_UNICODE);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>从 &lt;a class="link" href="http://php.net/manual/zh/function.json-encode.php" target="_blank" rel="noopener"
>json_encode()&lt;/a> 的文档中，我们能得知第二参数的各个选项会对输出来的json字符串有不同的解析方式。&lt;/p>
&lt;p>对比一下1和2的用法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">a_func(true, false) // 如果不知道函数原型的话根本不知道在干什么。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">b_func([&amp;#39;a&amp;#39; =&amp;gt; true, &amp;#39;b&amp;#39; =&amp;gt; false]) // 如果是第三方用的话不一定知道还有a和b两个参数，还得去源码中找。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="32我们如何文艺的设计这样的函数">3.2、我们如何文艺的设计这样的函数
&lt;/h4>&lt;p>以我用laravel这么多年的经验来看，内部设计的越精巧复杂，外部用起来就越简单明了。没错，用这种文艺的方法，也会有点复杂。&lt;/p>
&lt;p>首先，设计一个解析函数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * 解析按位输入的参数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @param  int $options     用户选择的参数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @param  int $all_options 所有参数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @param  int $default     默认值
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @return int 解析后的内容
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">function __parse_bitwise_params($options, $all_options, $default = 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    return $all_options &amp;amp; $options ?: $default;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>看看使用场景：&lt;/p>
&lt;p>假如一个用户模块，我们想获取用户的信息，那么其实我们可以这样写&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">/**&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span> &lt;span class="err">用户模块&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">UserModule&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">const&lt;/span> &lt;span class="n">USER_RAW&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">const&lt;/span> &lt;span class="n">USER_STR&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">const&lt;/span> &lt;span class="n">USER_ARRAY&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="o">/**&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">     &lt;span class="o">*&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">User&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">     &lt;span class="o">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="n">protected&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="n">public&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">getInfo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">INFO_RAW&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="o">$&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">__parse_bitwise_params&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_RAW&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_STR&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_ARRAY&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="k">case&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_RAW&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="k">case&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_STR&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="k">case&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_ARRAY&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">toArray&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="n">default&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>看到这，各位看官会问了，这不是拖了裤子**嘛！明明传一个数字进来就OK了.&lt;/p>
&lt;p>这个问题问的好，因为这种优(wen)雅(yi)的方式肯定不是用于传一种参数的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">/**&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span> &lt;span class="err">用户模块&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">UserModule&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">const&lt;/span> &lt;span class="n">USER_RAW&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">const&lt;/span> &lt;span class="n">USER_STR&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">const&lt;/span> &lt;span class="n">USER_ARRAY&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">const&lt;/span> &lt;span class="n">USER_MSG_ID&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">const&lt;/span> &lt;span class="n">USER_MSG_BASE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">32&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="k">const&lt;/span> &lt;span class="n">USER_MSG_ALL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="o">/**&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">     &lt;span class="o">*&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">User&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">     &lt;span class="o">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="n">protected&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="n">public&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">getInfo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">INFO_RAW&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="o">$&lt;/span>&lt;span class="n">msg_type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">__parse_bitwise_params&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_MSG_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_MSG_BASE&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_MSG_ALL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">msg_type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_MSG_ID&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="o">$&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">__parse_bitwise_params&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_RAW&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_STR&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_ARRAY&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="o">$&lt;/span>&lt;span class="n">get_user_msg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">opt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">opt&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">USER_MSG_BASE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">return&lt;/span> &lt;span class="n">array_only&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">toArray&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_name&lt;/span>&lt;span class="s1">&amp;#39;, &amp;#39;&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="s1">&amp;#39;]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">toArray&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="k">case&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">INFO_RAW&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="k">case&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">INFO_STR&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">return&lt;/span> &lt;span class="n">json_encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">get_user_msg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">msg_type&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="k">case&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">INFO_ARRAY&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">get_user_msg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">msg_type&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &lt;span class="n">default&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &lt;span class="k">return&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这才是为师的完全体！（不要吐槽那个匿名函数，只是想一个函数写完得了&amp;hellip;.）&lt;/p>
&lt;p>没错，这种写法就是用来传多个参数设计的，那么如果我们使用了这种方案设计代码，外部的调用将会很简单。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//获取user_id
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$user_id = $userModule-&amp;gt;getInfo(UserModule::INFO_MSG_ID);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//获取User模型
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$user = $userModule-&amp;gt;getInfo(UserModule::INFO_RAW);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//获取用户的信息数组
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$user = $userModule-&amp;gt;getInfo(UserModule::USER_ARRAY);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//获取用户的基本数据
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$user_base = $userModule-&amp;gt;getInfo(UserModule::USER_ARRAY | UserModule::USER_MSG_BASE);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="总结">总结：
&lt;/h3>&lt;p>对于这种模块的设计，这种方案不一定是最好的，因为设计代码的方式千千万，这只是一块砖，希望能对大家的代码设计带来新的灵感。&lt;/p>
&lt;p>原创文章，转载请注明出处链接。&lt;/p></description></item><item><title>解决json_encode中文会编码为unicode，兼容php5.4之前的版本</title><link>https://reatang.com/p/old-post-11/</link><pubDate>Mon, 06 Feb 2017 14:23:17 +0000</pubDate><guid>https://reatang.com/p/old-post-11/</guid><description>&lt;p>编码后也可以正确的用json_decode进行解码&lt;/p>
&lt;p>&lt;strong>1、使用正则&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * 解决json_encode的中文兼容问题（虽然看似兼容5.2不过没测试过）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @param  array|stdClass $value 被编码的数据
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @return 编码为json字符串的数据
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">function json_encode_unescaped_unicode($value)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    static $callback;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    if (version_compare(PHP_VERSION, &amp;#39;5.4.0&amp;#39;, &amp;#39;&amp;lt;&amp;#39;)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        if (!is_callable($callback)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            $callback = create_function(&amp;#39;$matchs&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &amp;#39;return iconv(\&amp;#39;UCS-2BE\&amp;#39;, \&amp;#39;UTF-8\&amp;#39;, pack(\&amp;#39;H4\&amp;#39;, $matchs[1]));&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        $str = json_encode($value);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        $str = preg_replace_callback(&amp;#34;#\\\u([0-9a-f]{4})#i&amp;#34;, $callback, $str);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        return $str;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    } else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        return json_encode($value, JSON_UNESCAPED_UNICODE);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>性能测试（环境：MACBOOKPRO 13 2015款）&lt;/p>
&lt;p>代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;?php
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">////////////////////////////////////////////////////////////////
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/// 解决 5.4以下的encode中文没有 JSON_UNESCAPED_UNICODE 选项的问题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">////////////////////////////////////////////////////////////////
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$num = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$time = microtime(true);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">function my_log()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    global $count, $time, $num;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    if (microtime(true) - $time &amp;gt;= 1) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        printf(&amp;#34;次数:%d\n&amp;#34;, $count);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        $count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        $time = microtime(true);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        $num++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">register_tick_function(&amp;#39;my_log&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * 解决json_encode的中文兼容问题（虽然看似兼容5.2不过没测试过）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @param  array|stdClass $value 被编码的数据
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * @return 编码为json字符串的数据
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">function json_encode_unescaped_unicode($value)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    static $callback;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    if (version_compare(PHP_VERSION, &amp;#39;5.4.0&amp;#39;, &amp;#39;&amp;lt;&amp;#39;)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        if (!is_callable($callback)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            $callback = create_function(&amp;#39;$matchs&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                &amp;#39;return iconv(\&amp;#39;UCS-2BE\&amp;#39;, \&amp;#39;UTF-8\&amp;#39;, pack(\&amp;#39;H4\&amp;#39;, $matchs[1]));&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        $str = json_encode($value);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        $str = preg_replace_callback(&amp;#34;#\\\u([0-9a-f]{4})#i&amp;#34;, $callback, $str);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        return $str;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    } else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        return json_encode($value, JSON_UNESCAPED_UNICODE);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$data = array(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &amp;#39;qwe&amp;#39; =&amp;gt; &amp;#39;你好世界&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &amp;#39;asd&amp;#39; =&amp;gt; array(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &amp;#39;神奇了&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &amp;#39;zxc&amp;#39; =&amp;gt; array(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            &amp;#39;s&amp;#39; =&amp;gt; &amp;#39;那么再深一点&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        )
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    )
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">declare(ticks = 1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    while ($num &amp;lt; 10) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        json_encode_unescaped_unicode($data);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        $count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>php5.3：（每秒encode次数）&lt;/p>
&lt;p>次数:39405&lt;/p>
&lt;p>次数:39829&lt;/p>
&lt;p>次数:40229&lt;/p>
&lt;p>次数:40300&lt;/p>
&lt;p>次数:40425&lt;/p>
&lt;p>次数:41298&lt;/p>
&lt;p>次数:38226&lt;/p>
&lt;p>次数:40405&lt;/p>
&lt;p>次数:40758&lt;/p>
&lt;p>次数:39853&lt;/p>
&lt;p>php5.6：(每秒encode次数)&lt;/p>
&lt;p>次数:380351&lt;/p>
&lt;p>次数:376383&lt;/p>
&lt;p>次数:384623&lt;/p>
&lt;p>次数:385797&lt;/p>
&lt;p>次数:381795&lt;/p>
&lt;p>次数:374920&lt;/p>
&lt;p>次数:366855&lt;/p>
&lt;p>次数:380634&lt;/p>
&lt;p>次数:373909&lt;/p>
&lt;p>次数:379061&lt;/p>
&lt;p>性能上的差异肯定是有的毕竟又用正则又用iconv的。&lt;/p>
&lt;p>从测试上看，9倍左右的差距应该还包含php5.6本身就比5.3快的原因。&lt;/p>
&lt;p>不过这个差距是有点大，那么还是赶紧升级php5.6吧，现在的大趋势都是7.1了，还在用老款干啥呀，各种新特性高性能在等着各位phper！（跑题了）&lt;/p>
&lt;p>&lt;strong>2、先用urlencode编码中文，在json_encode之后再用urldecode转换回来&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function json_encode_unescaped_unicode($value, $is_deep = false)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    if (version_compare(PHP_VERSION, &amp;#39;5.4.0&amp;#39;, &amp;#39;&amp;lt;&amp;#39;)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        foreach ($value as $k =&amp;gt; &amp;amp;$v) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            if (is_string($v)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                $v = urlencode($v);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            } else if (is_array($v)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">                $v = json_encode_unescaped_unicode($v, true);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">            }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        return $is_deep ? $value : urldecode(json_encode($value));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    } else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        return json_encode($value, JSON_UNESCAPED_UNICODE);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>同样的测试，这个性能没高多少，而且还带着个递归&lt;/p>
&lt;p>php5.3：&lt;/p>
&lt;p>次数:72744&lt;/p>
&lt;p>次数:72718&lt;/p>
&lt;p>次数:74101&lt;/p>
&lt;p>次数:75071&lt;/p>
&lt;p>次数:75672&lt;/p>
&lt;p>次数:73354&lt;/p>
&lt;p>次数:75474&lt;/p>
&lt;p>次数:73025&lt;/p>
&lt;p>次数:74453&lt;/p>
&lt;p>次数:75715&lt;/p>
&lt;p>原创文章转载请注明出处哟！&lt;/p></description></item><item><title>js_ase加密php_ase解密</title><link>https://reatang.com/p/old-post-4/</link><pubDate>Fri, 13 Jan 2017 10:38:15 +0000</pubDate><guid>https://reatang.com/p/old-post-4/</guid><description>&lt;p>js部分&lt;/p>
&lt;p>js使用的是crypto-js进行aes加密&lt;/p>
&lt;p>github地址：https://github.com/brix/crypto-js&lt;/p>
&lt;p>加密&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">md5SecterKey&lt;/span> &lt;span class="o">=&lt;/span>  &lt;span class="s1">&amp;#39;a1d3eaf653ab8d9c2c1d809f13ab5f05&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Utf8&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">md5SecterKey&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">iv&lt;/span>  &lt;span class="o">=&lt;/span> &lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Utf8&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">md5SecterKey&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">ciphertext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AES&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encrypt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">iv&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">iv&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CBC&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">padding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pad&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ZeroPadding&lt;/span>&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ciphertext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>解密&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Utf8&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">md5SecterKey&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">iv&lt;/span>  &lt;span class="o">=&lt;/span> &lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Utf8&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">md5SecterKey&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">ciphertext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ciphertext&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">var&lt;/span> &lt;span class="n">bytes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AES&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decrypt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ciphertext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">(),&lt;/span>  &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">iv&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">iv&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CBC&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">padding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pad&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ZeroPadding&lt;/span>&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">var&lt;/span> &lt;span class="n">plaintext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">bytes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Utf8&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">return&lt;/span> &lt;span class="n">plaintext&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>php部分&lt;/p>
&lt;p>php使用自带的aes解密&lt;/p>
&lt;p>加密&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$pk = &amp;#34;a1d3eaf653ab8d9c2c1d809f13ab5f05&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$iv = substr($pk, 0, 16);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$t = &amp;#39;reatang&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$encrypted = ( mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $pk, $t, MCRYPT_MODE_CBC,$iv) );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$base64Str = base64_encode($encrypted).&amp;#39;&amp;lt;br&amp;gt;&amp;#39;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>解密&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$str_encrypt = base64_decode($base64Str);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$pk = &amp;#34;a1d3eaf653ab8d9c2c1d809f13ab5f05&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$iv = substr($pk, 0, 16);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">echo mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $pk, base64_decode($str_encrypt), MCRYPT_MODE_CBC, $iv);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">exit;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>